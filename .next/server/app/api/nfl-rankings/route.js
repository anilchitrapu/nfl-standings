"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/nfl-rankings/route";
exports.ids = ["app/api/nfl-rankings/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fnfl-rankings%2Froute&page=%2Fapi%2Fnfl-rankings%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fnfl-rankings%2Froute.ts&appDir=%2FUsers%2Fanilchitrapu%2FLibrary%2FCloudStorage%2FGoogleDrive-anilchitrapu%40gmail.com%2FMy%20Drive%2F1%20Projects%2F2024-12%20NFL%20standings%20application%2Fnfl-standings%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fanilchitrapu%2FLibrary%2FCloudStorage%2FGoogleDrive-anilchitrapu%40gmail.com%2FMy%20Drive%2F1%20Projects%2F2024-12%20NFL%20standings%20application%2Fnfl-standings&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fnfl-rankings%2Froute&page=%2Fapi%2Fnfl-rankings%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fnfl-rankings%2Froute.ts&appDir=%2FUsers%2Fanilchitrapu%2FLibrary%2FCloudStorage%2FGoogleDrive-anilchitrapu%40gmail.com%2FMy%20Drive%2F1%20Projects%2F2024-12%20NFL%20standings%20application%2Fnfl-standings%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fanilchitrapu%2FLibrary%2FCloudStorage%2FGoogleDrive-anilchitrapu%40gmail.com%2FMy%20Drive%2F1%20Projects%2F2024-12%20NFL%20standings%20application%2Fnfl-standings&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_anilchitrapu_Library_CloudStorage_GoogleDrive_anilchitrapu_gmail_com_My_Drive_1_Projects_2024_12_NFL_standings_application_nfl_standings_app_api_nfl_rankings_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/nfl-rankings/route.ts */ \"(rsc)/./app/api/nfl-rankings/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/nfl-rankings/route\",\n        pathname: \"/api/nfl-rankings\",\n        filename: \"route\",\n        bundlePath: \"app/api/nfl-rankings/route\"\n    },\n    resolvedPagePath: \"/Users/anilchitrapu/Library/CloudStorage/GoogleDrive-anilchitrapu@gmail.com/My Drive/1 Projects/2024-12 NFL standings application/nfl-standings/app/api/nfl-rankings/route.ts\",\n    nextConfigOutput,\n    userland: _Users_anilchitrapu_Library_CloudStorage_GoogleDrive_anilchitrapu_gmail_com_My_Drive_1_Projects_2024_12_NFL_standings_application_nfl_standings_app_api_nfl_rankings_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/nfl-rankings/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZuZmwtcmFua2luZ3MlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRm5mbC1yYW5raW5ncyUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRm5mbC1yYW5raW5ncyUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmFuaWxjaGl0cmFwdSUyRkxpYnJhcnklMkZDbG91ZFN0b3JhZ2UlMkZHb29nbGVEcml2ZS1hbmlsY2hpdHJhcHUlNDBnbWFpbC5jb20lMkZNeSUyMERyaXZlJTJGMSUyMFByb2plY3RzJTJGMjAyNC0xMiUyME5GTCUyMHN0YW5kaW5ncyUyMGFwcGxpY2F0aW9uJTJGbmZsLXN0YW5kaW5ncyUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZhbmlsY2hpdHJhcHUlMkZMaWJyYXJ5JTJGQ2xvdWRTdG9yYWdlJTJGR29vZ2xlRHJpdmUtYW5pbGNoaXRyYXB1JTQwZ21haWwuY29tJTJGTXklMjBEcml2ZSUyRjElMjBQcm9qZWN0cyUyRjIwMjQtMTIlMjBORkwlMjBzdGFuZGluZ3MlMjBhcHBsaWNhdGlvbiUyRm5mbC1zdGFuZGluZ3MmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQzZIO0FBQzFNO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLz82NTI5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy9hbmlsY2hpdHJhcHUvTGlicmFyeS9DbG91ZFN0b3JhZ2UvR29vZ2xlRHJpdmUtYW5pbGNoaXRyYXB1QGdtYWlsLmNvbS9NeSBEcml2ZS8xIFByb2plY3RzLzIwMjQtMTIgTkZMIHN0YW5kaW5ncyBhcHBsaWNhdGlvbi9uZmwtc3RhbmRpbmdzL2FwcC9hcGkvbmZsLXJhbmtpbmdzL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9uZmwtcmFua2luZ3Mvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9uZmwtcmFua2luZ3NcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL25mbC1yYW5raW5ncy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy9hbmlsY2hpdHJhcHUvTGlicmFyeS9DbG91ZFN0b3JhZ2UvR29vZ2xlRHJpdmUtYW5pbGNoaXRyYXB1QGdtYWlsLmNvbS9NeSBEcml2ZS8xIFByb2plY3RzLzIwMjQtMTIgTkZMIHN0YW5kaW5ncyBhcHBsaWNhdGlvbi9uZmwtc3RhbmRpbmdzL2FwcC9hcGkvbmZsLXJhbmtpbmdzL3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9uZmwtcmFua2luZ3Mvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fnfl-rankings%2Froute&page=%2Fapi%2Fnfl-rankings%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fnfl-rankings%2Froute.ts&appDir=%2FUsers%2Fanilchitrapu%2FLibrary%2FCloudStorage%2FGoogleDrive-anilchitrapu%40gmail.com%2FMy%20Drive%2F1%20Projects%2F2024-12%20NFL%20standings%20application%2Fnfl-standings%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fanilchitrapu%2FLibrary%2FCloudStorage%2FGoogleDrive-anilchitrapu%40gmail.com%2FMy%20Drive%2F1%20Projects%2F2024-12%20NFL%20standings%20application%2Fnfl-standings&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/nfl-rankings/route.ts":
/*!***************************************!*\
  !*** ./app/api/nfl-rankings/route.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _src_lib_process_rankings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/src/lib/process-rankings */ \"(rsc)/./src/lib/process-rankings.ts\");\n/* harmony import */ var _src_lib_espn_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/src/lib/espn-fetch */ \"(rsc)/./src/lib/espn-fetch.ts\");\n\n\n\nasync function GET(request) {\n    try {\n        const data = await (0,_src_lib_espn_fetch__WEBPACK_IMPORTED_MODULE_2__.fetchEspnNflData)();\n        const allEvents = [];\n        // Process top-level events\n        if (data.events) {\n            const validEvents = data.events.filter((ev)=>{\n                const isCompleted = ev.status?.type?.completed === true;\n                const isRegularSeason = ev.season?.type === 2; // Regular season = type 2\n                const isCurrentSeason = ev.season?.year === 2024; // Filter for 2024 season\n                const hasValidCompetitors = ev.competitions?.[0]?.competitors?.length === 2;\n                const isValidDate = new Date(ev.date) >= new Date(\"2024-09-01\");\n                return isCompleted && isRegularSeason && isCurrentSeason && hasValidCompetitors && isValidDate;\n            });\n            console.log(`Found ${validEvents.length} valid regular season events`);\n            allEvents.push(...validEvents);\n        }\n        // Process calendar events if present\n        if (data.leagues) {\n            data.leagues.forEach((league)=>{\n                if (league.calendar) {\n                    league.calendar.forEach((week)=>{\n                        week.entries?.forEach((entry)=>{\n                            const events = entry.data?.events || [];\n                            const validEvents = events.filter((ev)=>{\n                                const isCompleted = ev.status?.type?.completed === true;\n                                const isRegularSeason = ev.season?.type === 2;\n                                const isCurrentSeason = ev.season?.year === 2024;\n                                const hasValidCompetitors = ev.competitions?.[0]?.competitors?.length === 2;\n                                const isValidDate = new Date(ev.date) >= new Date(\"2024-09-01\");\n                                return isCompleted && isRegularSeason && isCurrentSeason && hasValidCompetitors && isValidDate;\n                            });\n                            allEvents.push(...validEvents);\n                        });\n                    });\n                }\n            });\n        }\n        // Sort events chronologically\n        allEvents.sort((a, b)=>new Date(a.date).getTime() - new Date(b.date).getTime());\n        console.log(\"Events summary:\", {\n            total: allEvents.length,\n            firstDate: allEvents[0]?.date,\n            lastDate: allEvents[allEvents.length - 1]?.date,\n            weekRange: `Week ${allEvents[0]?.week.number} to Week ${allEvents[allEvents.length - 1]?.week.number}`\n        });\n        const allRankings = await (0,_src_lib_process_rankings__WEBPACK_IMPORTED_MODULE_1__.buildPowerRankingsOverTime)(allEvents);\n        // Log sample rankings for verification\n        if (allRankings.length > 0) {\n            const sample = allRankings[0];\n            console.log(\"Sample team rankings:\", {\n                team: sample.teamName,\n                weeks: sample.weeklyPowerRanks.length,\n                latestRank: sample.weeklyPowerRanks[sample.weeklyPowerRanks.length - 1]\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(allRankings);\n    } catch (error) {\n        console.error(\"API Error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: error instanceof Error ? error.message : \"An unknown error occurred\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/nfl-rankings/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/espn-fetch.ts":
/*!*******************************!*\
  !*** ./src/lib/espn-fetch.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchEspnNflData: () => (/* binding */ fetchEspnNflData)\n/* harmony export */ });\n// ... existing code (if any) ...\nlet cachedData = null;\nlet lastFetchTime = 0;\nconst CACHE_DURATION = 5 * 60 * 1000; // 5 minutes in milliseconds\nasync function fetchEspnNflData() {\n    if (cachedData && Date.now() - lastFetchTime < CACHE_DURATION) {\n        return cachedData;\n    }\n    // Regular season 2024 typically starts early September and ends early January\n    const url = \"https://site.api.espn.com/apis/site/v2/sports/football/nfl/scoreboard?limit=1000&dates=20240901-20250215\";\n    console.log(\"Fetching NFL data from:\", url);\n    try {\n        const response = await fetch(url, {\n            next: {\n                revalidate: 300\n            },\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        });\n        if (!response.ok) {\n            throw new Error(`ESPN API error: ${response.status} ${response.statusText}`);\n        }\n        const data = await response.json();\n        // Log data structure for debugging\n        console.log(\"ESPN data structure:\", {\n            hasEvents: !!data.events,\n            eventCount: data.events?.length,\n            hasLeagues: !!data.leagues,\n            leagueCount: data.leagues?.length,\n            seasonType: data.events?.[0]?.season?.type,\n            firstEventDate: data.events?.[0]?.date,\n            lastEventDate: data.events?.[data.events?.length - 1]?.date\n        });\n        cachedData = data;\n        lastFetchTime = Date.now();\n        return data;\n    } catch (error) {\n        if (cachedData) {\n            console.warn(\"Failed to fetch fresh data, using cached data:\", error);\n            return cachedData;\n        }\n        throw error;\n    }\n} // ... existing code (if any) ... \n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2VzcG4tZmV0Y2gudHMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlDQUFpQztBQUVqQyxJQUFJQSxhQUFrQjtBQUN0QixJQUFJQyxnQkFBd0I7QUFDNUIsTUFBTUMsaUJBQWlCLElBQUksS0FBSyxNQUFNLDRCQUE0QjtBQUUzRCxlQUFlQztJQUNwQixJQUFJSCxjQUFjLEtBQU1LLEdBQUcsS0FBS0osZ0JBQWlCQyxnQkFBZ0I7UUFDL0QsT0FBT0Y7SUFDVDtJQUVBLDhFQUE4RTtJQUM5RSxNQUFNTSxNQUFNO0lBRVpDLFFBQVFDLEdBQUcsQ0FBQywyQkFBMkJGO0lBRXZDLElBQUk7UUFDRixNQUFNRyxXQUFXLE1BQU1DLE1BQU1KLEtBQUs7WUFDaENLLE1BQU07Z0JBQUVDLFlBQVk7WUFBSTtZQUN4QkMsU0FBUztnQkFDUCxVQUFVO1lBQ1o7UUFDRjtRQUVBLElBQUksQ0FBQ0osU0FBU0ssRUFBRSxFQUFFO1lBQ2hCLE1BQU0sSUFBSUMsTUFBTSxDQUFDLGdCQUFnQixFQUFFTixTQUFTTyxNQUFNLENBQUMsQ0FBQyxFQUFFUCxTQUFTUSxVQUFVLENBQUMsQ0FBQztRQUM3RTtRQUVBLE1BQU1DLE9BQU8sTUFBTVQsU0FBU1UsSUFBSTtRQUVoQyxtQ0FBbUM7UUFDbkNaLFFBQVFDLEdBQUcsQ0FBQyx3QkFBd0I7WUFDbENZLFdBQVcsQ0FBQyxDQUFDRixLQUFLRyxNQUFNO1lBQ3hCQyxZQUFZSixLQUFLRyxNQUFNLEVBQUVFO1lBQ3pCQyxZQUFZLENBQUMsQ0FBQ04sS0FBS08sT0FBTztZQUMxQkMsYUFBYVIsS0FBS08sT0FBTyxFQUFFRjtZQUMzQkksWUFBWVQsS0FBS0csTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFTyxRQUFRQztZQUN0Q0MsZ0JBQWdCWixLQUFLRyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUVVO1lBQ2xDQyxlQUFlZCxLQUFLRyxNQUFNLEVBQUUsQ0FBQ0gsS0FBS0csTUFBTSxFQUFFRSxTQUFTLEVBQUUsRUFBRVE7UUFDekQ7UUFFQS9CLGFBQWFrQjtRQUNiakIsZ0JBQWdCRyxLQUFLQyxHQUFHO1FBQ3hCLE9BQU9hO0lBQ1QsRUFBRSxPQUFPZSxPQUFPO1FBQ2QsSUFBSWpDLFlBQVk7WUFDZE8sUUFBUTJCLElBQUksQ0FBQyxrREFBa0REO1lBQy9ELE9BQU9qQztRQUNUO1FBQ0EsTUFBTWlDO0lBQ1I7QUFDRixFQUNBLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9saWIvZXNwbi1mZXRjaC50cz9jNTdlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIC4uLiBleGlzdGluZyBjb2RlIChpZiBhbnkpIC4uLlxuXG5sZXQgY2FjaGVkRGF0YTogYW55ID0gbnVsbDtcbmxldCBsYXN0RmV0Y2hUaW1lOiBudW1iZXIgPSAwO1xuY29uc3QgQ0FDSEVfRFVSQVRJT04gPSA1ICogNjAgKiAxMDAwOyAvLyA1IG1pbnV0ZXMgaW4gbWlsbGlzZWNvbmRzXG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBmZXRjaEVzcG5OZmxEYXRhKCk6IFByb21pc2U8YW55PiB7XG4gIGlmIChjYWNoZWREYXRhICYmIChEYXRlLm5vdygpIC0gbGFzdEZldGNoVGltZSkgPCBDQUNIRV9EVVJBVElPTikge1xuICAgIHJldHVybiBjYWNoZWREYXRhO1xuICB9XG5cbiAgLy8gUmVndWxhciBzZWFzb24gMjAyNCB0eXBpY2FsbHkgc3RhcnRzIGVhcmx5IFNlcHRlbWJlciBhbmQgZW5kcyBlYXJseSBKYW51YXJ5XG4gIGNvbnN0IHVybCA9ICdodHRwczovL3NpdGUuYXBpLmVzcG4uY29tL2FwaXMvc2l0ZS92Mi9zcG9ydHMvZm9vdGJhbGwvbmZsL3Njb3JlYm9hcmQ/bGltaXQ9MTAwMCZkYXRlcz0yMDI0MDkwMS0yMDI1MDIxNSc7XG4gIFxuICBjb25zb2xlLmxvZygnRmV0Y2hpbmcgTkZMIGRhdGEgZnJvbTonLCB1cmwpO1xuXG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwsIHtcbiAgICAgIG5leHQ6IHsgcmV2YWxpZGF0ZTogMzAwIH0sIC8vIENhY2hlIGZvciA1IG1pbnV0ZXNcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgICAgfVxuICAgIH0pO1xuICAgIFxuICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgRVNQTiBBUEkgZXJyb3I6ICR7cmVzcG9uc2Uuc3RhdHVzfSAke3Jlc3BvbnNlLnN0YXR1c1RleHR9YCk7XG4gICAgfVxuICAgIFxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgXG4gICAgLy8gTG9nIGRhdGEgc3RydWN0dXJlIGZvciBkZWJ1Z2dpbmdcbiAgICBjb25zb2xlLmxvZygnRVNQTiBkYXRhIHN0cnVjdHVyZTonLCB7XG4gICAgICBoYXNFdmVudHM6ICEhZGF0YS5ldmVudHMsXG4gICAgICBldmVudENvdW50OiBkYXRhLmV2ZW50cz8ubGVuZ3RoLFxuICAgICAgaGFzTGVhZ3VlczogISFkYXRhLmxlYWd1ZXMsXG4gICAgICBsZWFndWVDb3VudDogZGF0YS5sZWFndWVzPy5sZW5ndGgsXG4gICAgICBzZWFzb25UeXBlOiBkYXRhLmV2ZW50cz8uWzBdPy5zZWFzb24/LnR5cGUsXG4gICAgICBmaXJzdEV2ZW50RGF0ZTogZGF0YS5ldmVudHM/LlswXT8uZGF0ZSxcbiAgICAgIGxhc3RFdmVudERhdGU6IGRhdGEuZXZlbnRzPy5bZGF0YS5ldmVudHM/Lmxlbmd0aCAtIDFdPy5kYXRlXG4gICAgfSk7XG5cbiAgICBjYWNoZWREYXRhID0gZGF0YTtcbiAgICBsYXN0RmV0Y2hUaW1lID0gRGF0ZS5ub3coKTtcbiAgICByZXR1cm4gZGF0YTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBpZiAoY2FjaGVkRGF0YSkge1xuICAgICAgY29uc29sZS53YXJuKCdGYWlsZWQgdG8gZmV0Y2ggZnJlc2ggZGF0YSwgdXNpbmcgY2FjaGVkIGRhdGE6JywgZXJyb3IpO1xuICAgICAgcmV0dXJuIGNhY2hlZERhdGE7XG4gICAgfVxuICAgIHRocm93IGVycm9yO1xuICB9XG59XG4vLyAuLi4gZXhpc3RpbmcgY29kZSAoaWYgYW55KSAuLi4gIl0sIm5hbWVzIjpbImNhY2hlZERhdGEiLCJsYXN0RmV0Y2hUaW1lIiwiQ0FDSEVfRFVSQVRJT04iLCJmZXRjaEVzcG5OZmxEYXRhIiwiRGF0ZSIsIm5vdyIsInVybCIsImNvbnNvbGUiLCJsb2ciLCJyZXNwb25zZSIsImZldGNoIiwibmV4dCIsInJldmFsaWRhdGUiLCJoZWFkZXJzIiwib2siLCJFcnJvciIsInN0YXR1cyIsInN0YXR1c1RleHQiLCJkYXRhIiwianNvbiIsImhhc0V2ZW50cyIsImV2ZW50cyIsImV2ZW50Q291bnQiLCJsZW5ndGgiLCJoYXNMZWFndWVzIiwibGVhZ3VlcyIsImxlYWd1ZUNvdW50Iiwic2Vhc29uVHlwZSIsInNlYXNvbiIsInR5cGUiLCJmaXJzdEV2ZW50RGF0ZSIsImRhdGUiLCJsYXN0RXZlbnREYXRlIiwiZXJyb3IiLCJ3YXJuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/espn-fetch.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/process-rankings.ts":
/*!*************************************!*\
  !*** ./src/lib/process-rankings.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildPowerRankingsOverTime: () => (/* binding */ buildPowerRankingsOverTime)\n/* harmony export */ });\n/* harmony import */ var _team_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./team-data */ \"(rsc)/./src/lib/team-data.ts\");\n\n/**\n * Compute ranks for a single week's teams, given their performance.\n * Ranks by wins DESC, point differential DESC, then losses ASC,\n * then alphabetical order (ties).\n */ function computeRankingsForWeek(weekTeamData) {\n    const teamsWithStats = weekTeamData.map((team)=>{\n        const totalGames = team.wins + team.losses + team.ties;\n        // NFL uses this formula for win percentage: (wins + (ties/2)) / total games\n        const winPct = totalGames > 0 ? parseFloat(((team.wins + team.ties * 0.5) / totalGames).toFixed(3)) : 0.000;\n        return {\n            ...team,\n            winPct,\n            // NFL tiebreaker order: 1) Win%, 2) H2H, 3) Division record, 4) Common games\n            divisionWinPct: calculateWinPct(team.divisionRecord.wins, team.divisionRecord.losses, team.divisionRecord.ties),\n            conferenceWinPct: calculateWinPct(team.conferenceRecord.wins, team.conferenceRecord.losses, team.conferenceRecord.ties)\n        };\n    });\n    // Sort teams by NFL criteria\n    return teamsWithStats.sort((a, b)=>{\n        // Primary sort by win percentage\n        if (a.winPct !== b.winPct) return b.winPct - a.winPct;\n        // If same conference, use conference record\n        if (a.conference === b.conference) {\n            if (a.conferenceWinPct !== b.conferenceWinPct) {\n                return b.conferenceWinPct - a.conferenceWinPct;\n            }\n        }\n        // If same division, use division record\n        if (a.division === b.division) {\n            if (a.divisionWinPct !== b.divisionWinPct) {\n                return b.divisionWinPct - a.divisionWinPct;\n            }\n        }\n        // Last resort: point differential\n        return b.pointsFor - b.pointsAgainst - (a.pointsFor - a.pointsAgainst);\n    }).map((team, index)=>({\n            teamId: team.teamId,\n            rank: index + 1,\n            winPct: team.winPct\n        }));\n}\n// Helper function to calculate win percentage in NFL format\nfunction calculateWinPct(wins, losses, ties) {\n    const totalGames = wins + losses + ties;\n    if (totalGames === 0) return 0.000;\n    return parseFloat(((wins + ties * 0.5) / totalGames).toFixed(3));\n}\n/**\n * Helper: extract all valid past events from ESPN response\n */ function getAllValidEvents(scoreboard) {\n    const allEvents = [];\n    // 1) If ESPN scoreboard has top-level events (preseason often in scoreboard.events)\n    if (scoreboard.events && scoreboard.events.length > 0) {\n        const validEvents = scoreboard.events.filter((ev)=>{\n            // Adjust for your logic, e.g. only type=2 (regular) and year=2024:\n            // return ev.season?.type === 2 && ev.season?.year === 2024;\n            return true; // Replace with your matching condition\n        });\n        allEvents.push(...validEvents);\n    }\n    // 2) If ESPN scoreboard uses league.calendar for events (some seasons)\n    scoreboard.leagues?.forEach((league)=>{\n        league.calendar?.forEach((week)=>{\n            week.entries?.forEach((entry)=>{\n                if (entry.data?.events) {\n                    const validEvents = entry.data.events.filter((ev)=>{\n                        // Adjust for your logic as above:\n                        return true; // Replace with your matching condition\n                    });\n                    allEvents.push(...validEvents);\n                }\n            });\n        });\n    });\n    return allEvents;\n}\n// Add this mapping at the top level\nconst ESPN_TO_LOCAL_ID = {\n    \"1\": \"1\",\n    \"2\": \"2\",\n    \"3\": \"3\",\n    \"4\": \"4\",\n    \"5\": \"5\",\n    \"6\": \"6\",\n    \"7\": \"7\",\n    \"8\": \"8\",\n    \"9\": \"9\",\n    \"10\": \"10\",\n    \"11\": \"11\",\n    \"12\": \"12\",\n    \"13\": \"13\",\n    \"14\": \"14\",\n    \"15\": \"15\",\n    \"16\": \"16\",\n    \"17\": \"17\",\n    \"18\": \"18\",\n    \"19\": \"19\",\n    \"20\": \"20\",\n    \"21\": \"21\",\n    \"22\": \"22\",\n    \"23\": \"23\",\n    \"24\": \"24\",\n    \"25\": \"25\",\n    \"26\": \"26\",\n    \"27\": \"27\",\n    \"28\": \"28\",\n    \"29\": \"29\",\n    \"30\": \"30\",\n    \"31\": \"31\",\n    \"33\": \"33\",\n    \"34\": \"34\"\n};\n// Add this helper function at the top level\nfunction logWeeklyStats(weeklyRankings) {\n    console.log(\"\\n=== Weekly Team Rankings ===\");\n    Object.entries(weeklyRankings).forEach(([weekNum, rankings])=>{\n        console.log(`\\nWeek ${weekNum}:`);\n        console.log(\"Rank | Team                  | Record  | Win% | PF  | PA  | DIFF\");\n        console.log(\"-----|----------------------|---------|------|-----|-----|-----\");\n        rankings.forEach(({ teamId, rank, record, pointsFor, pointsAgainst })=>{\n            const team = _team_data__WEBPACK_IMPORTED_MODULE_0__.NFL_TEAM_DATA[teamId];\n            const [wins, losses, ties] = record.split(\"-\").map((n)=>parseInt(n));\n            const totalGames = wins + losses + (ties || 0);\n            const winPct = totalGames > 0 ? ((wins + (ties || 0) * 0.5) / totalGames).toFixed(3) : \".000\";\n            const diff = pointsFor - pointsAgainst;\n            const diffStr = (diff >= 0 ? \"+\" : \"\") + diff;\n            const paddedRank = rank.toString().padStart(2, \" \");\n            const paddedName = (team?.name || teamId).padEnd(20, \" \");\n            const paddedRecord = record.padEnd(7, \" \");\n            const paddedPF = pointsFor.toString().padStart(3, \" \");\n            const paddedPA = pointsAgainst.toString().padStart(3, \" \");\n            const paddedDiff = diffStr.padStart(4, \" \");\n            console.log(`${paddedRank}   | ${paddedName} | ${paddedRecord} | ${winPct} | ${paddedPF} | ${paddedPA} | ${paddedDiff}`);\n        });\n    });\n    console.log(\"\\n\");\n}\nasync function buildPowerRankingsOverTime(allEvents) {\n    console.log(\"Total events to process:\", allEvents.length);\n    const weeklyTeamData = new Map();\n    let maxCompletedWeek = 0; // Track highest completed week found\n    for (const event of allEvents){\n        const weekNumber = event.week?.number;\n        if (!weekNumber) continue;\n        // If the event is not completed, skip it\n        if (!event.status?.type?.completed) {\n            continue;\n        }\n        // Update maxCompletedWeek if we proceed\n        maxCompletedWeek = Math.max(maxCompletedWeek, weekNumber);\n        for (const competition of event.competitions ?? []){\n            if (!competition.status?.type?.completed) {\n                continue;\n            }\n            const { competitors } = competition;\n            if (!competitors || competitors.length < 2) continue;\n            const home = competitors[0];\n            const away = competitors[1];\n            const homeScore = parseInt(home.score, 10) || 0;\n            const awayScore = parseInt(away.score, 10) || 0;\n            const recordStats = (comp, ptsFor, ptsAgainst, isWinner, isTie)=>{\n                const espnTeamId = comp?.team?.id;\n                if (!espnTeamId) return;\n                const teamId = ESPN_TO_LOCAL_ID[espnTeamId] || espnTeamId;\n                if (!weeklyTeamData.has(teamId)) {\n                    weeklyTeamData.set(teamId, {});\n                }\n                const teamWeeks = weeklyTeamData.get(teamId);\n                if (!teamWeeks[weekNumber]) {\n                    teamWeeks[weekNumber] = {\n                        pointsFor: 0,\n                        pointsAgainst: 0,\n                        wins: 0,\n                        losses: 0,\n                        ties: 0\n                    };\n                }\n                teamWeeks[weekNumber].pointsFor += ptsFor;\n                teamWeeks[weekNumber].pointsAgainst += ptsAgainst;\n                if (isWinner) {\n                    teamWeeks[weekNumber].wins += 1;\n                } else if (isTie) {\n                    teamWeeks[weekNumber].ties += 1;\n                } else {\n                    teamWeeks[weekNumber].losses += 1;\n                }\n            };\n            const isHomeWinner = homeScore > awayScore;\n            const isTie = homeScore === awayScore;\n            recordStats(home, homeScore, awayScore, isHomeWinner, isTie);\n            recordStats(away, awayScore, homeScore, !isHomeWinner && !isTie, isTie);\n        }\n    }\n    // Build weeklyRankings only up to the final completed week\n    const weeklyRankings = {};\n    for(let week = 1; week <= maxCompletedWeek; week++){\n        // gather stats cumulatively for 'week'\n        const teamStatsArr = [];\n        _team_data__WEBPACK_IMPORTED_MODULE_0__.NFL_TEAM_IDS.forEach((tid)=>{\n            const weeksData = weeklyTeamData.get(tid);\n            if (!weeksData) {\n                teamStatsArr.push({\n                    teamId: tid,\n                    wins: 0,\n                    losses: 0,\n                    ties: 0,\n                    pointsFor: 0,\n                    pointsAgainst: 0\n                });\n                return;\n            }\n            let wins = 0, losses = 0, ties = 0, pointsFor = 0, pointsAgainst = 0;\n            for(let w = 1; w <= week; w++){\n                const rec = weeksData[w];\n                if (!rec) continue;\n                wins += rec.wins;\n                losses += rec.losses;\n                ties += rec.ties;\n                pointsFor += rec.pointsFor;\n                pointsAgainst += rec.pointsAgainst;\n            }\n            teamStatsArr.push({\n                teamId: tid,\n                wins,\n                losses,\n                ties,\n                pointsFor,\n                pointsAgainst\n            });\n        });\n        // Sort them using tie-breakers\n        teamStatsArr.sort((a, b)=>{\n            const winPctA = (a.wins + 0.5 * a.ties) / (a.wins + a.losses + a.ties || 1);\n            const winPctB = (b.wins + 0.5 * b.ties) / (b.wins + b.losses + b.ties || 1);\n            if (winPctB !== winPctA) return winPctB - winPctA;\n            if (b.pointsFor !== a.pointsFor) return b.pointsFor - a.pointsFor;\n            return 0;\n        });\n        let lastKey = \"\";\n        let lastRank = 1;\n        const outArr = [];\n        teamStatsArr.forEach((stats, idx)=>{\n            const key = `${(stats.wins + 0.5 * stats.ties) / (stats.wins + stats.losses + stats.ties || 1)}-${stats.pointsFor}`;\n            const rank = key === lastKey ? lastRank : idx + 1;\n            lastKey = key;\n            lastRank = rank;\n            outArr.push({\n                teamId: stats.teamId,\n                rank,\n                record: `${stats.wins}-${stats.losses}${stats.ties ? `-${stats.ties}` : \"\"}`,\n                pointsFor: stats.pointsFor,\n                pointsAgainst: stats.pointsAgainst\n            });\n        });\n        weeklyRankings[week] = outArr;\n    }\n    // Log the final weekly stats\n    logWeeklyStats(weeklyRankings);\n    // Transform into final array to return\n    const finalPowerRankings = _team_data__WEBPACK_IMPORTED_MODULE_0__.NFL_TEAM_IDS.map((tid)=>{\n        const matchingTeamData = _team_data__WEBPACK_IMPORTED_MODULE_0__.NFL_TEAM_DATA[tid];\n        const teamName = matchingTeamData?.name || tid;\n        const logoUrl = matchingTeamData?.logo || \"\";\n        const weeklyPowerRanks = Object.entries(weeklyRankings).map(([weekStr, ranks])=>{\n            const week = parseInt(weekStr);\n            const found = ranks.find((r)=>r.teamId === tid);\n            const recordStr = found?.record || \"0-0\"; // W-L or W-L-T\n            const [wins, losses, ties] = recordStr.split(\"-\").map((n)=>parseInt(n) || 0);\n            const totalGames = wins + losses + ties;\n            const winPct = totalGames > 0 ? parseFloat(((wins + 0.5 * ties) / totalGames).toFixed(3)) : 0.000;\n            return {\n                week,\n                rank: found?.rank ?? 32,\n                winPct,\n                record: recordStr,\n                teamId: tid\n            };\n        });\n        return {\n            teamId: tid,\n            teamName,\n            logoUrl,\n            weeklyPowerRanks\n        };\n    });\n    return finalPowerRankings;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/process-rankings.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/team-data.ts":
/*!******************************!*\
  !*** ./src/lib/team-data.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NFL_TEAM_DATA: () => (/* binding */ NFL_TEAM_DATA),\n/* harmony export */   NFL_TEAM_IDS: () => (/* binding */ NFL_TEAM_IDS)\n/* harmony export */ });\nconst NFL_TEAM_DATA = {\n    \"1\": {\n        name: \"Atlanta Falcons\",\n        color: \"#A71930\",\n        logo: \"https://a.espncdn.com/i/teamlogos/nfl/500/atl.png\",\n        conference: \"NFC\",\n        division: \"South\"\n    },\n    \"2\": {\n        name: \"Buffalo Bills\",\n        color: \"#00338D\",\n        logo: \"https://a.espncdn.com/i/teamlogos/nfl/500/buf.png\",\n        conference: \"AFC\",\n        division: \"East\"\n    },\n    \"3\": {\n        name: \"Chicago Bears\",\n        color: \"#C83803\",\n        logo: \"https://a.espncdn.com/i/teamlogos/nfl/500/chi.png\",\n        conference: \"NFC\",\n        division: \"North\"\n    },\n    \"4\": {\n        name: \"Cincinnati Bengals\",\n        color: \"#FB4F14\",\n        logo: \"https://a.espncdn.com/i/teamlogos/nfl/500/cin.png\",\n        conference: \"AFC\",\n        division: \"North\"\n    },\n    \"5\": {\n        name: \"Cleveland Browns\",\n        color: \"#311D00\",\n        logo: \"https://a.espncdn.com/i/teamlogos/nfl/500/cle.png\",\n        conference: \"AFC\",\n        division: \"North\"\n    },\n    \"6\": {\n        name: \"Dallas Cowboys\",\n        color: \"#041E42\",\n        logo: \"https://a.espncdn.com/i/teamlogos/nfl/500/dal.png\",\n        conference: \"NFC\",\n        division: \"East\"\n    },\n    \"7\": {\n        name: \"Denver Broncos\",\n        color: \"#FB4F14\",\n        logo: \"https://a.espncdn.com/i/teamlogos/nfl/500/den.png\",\n        conference: \"AFC\",\n        division: \"West\"\n    },\n    \"8\": {\n        name: \"Detroit Lions\",\n        color: \"#0076B6\",\n        logo: \"https://a.espncdn.com/i/teamlogos/nfl/500/det.png\",\n        conference: \"NFC\",\n        division: \"North\"\n    },\n    \"9\": {\n        name: \"Green Bay Packers\",\n        color: \"#203731\",\n        logo: \"https://a.espncdn.com/i/teamlogos/nfl/500/gb.png\",\n        conference: \"NFC\",\n        division: \"North\"\n    },\n    \"10\": {\n        name: \"Tennessee Titans\",\n        color: \"#0C2340\",\n        logo: \"https://a.espncdn.com/i/teamlogos/nfl/500/ten.png\",\n        conference: \"AFC\",\n        division: \"South\"\n    },\n    \"11\": {\n        name: \"Indianapolis Colts\",\n        color: \"#002C5F\",\n        logo: \"https://a.espncdn.com/i/teamlogos/nfl/500/ind.png\",\n        conference: \"AFC\",\n        division: \"South\"\n    },\n    \"12\": {\n        name: \"Kansas City Chiefs\",\n        color: \"#E31837\",\n        logo: \"https://a.espncdn.com/i/teamlogos/nfl/500/kc.png\",\n        conference: \"AFC\",\n        division: \"West\"\n    },\n    \"13\": {\n        name: \"Las Vegas Raiders\",\n        color: \"#000000\",\n        logo: \"https://a.espncdn.com/i/teamlogos/nfl/500/lv.png\",\n        conference: \"AFC\",\n        division: \"West\"\n    },\n    \"14\": {\n        name: \"Los Angeles Rams\",\n        color: \"#003594\",\n        logo: \"https://a.espncdn.com/i/teamlogos/nfl/500/lar.png\",\n        conference: \"NFC\",\n        division: \"West\"\n    },\n    \"15\": {\n        name: \"Miami Dolphins\",\n        color: \"#008E97\",\n        logo: \"https://a.espncdn.com/i/teamlogos/nfl/500/mia.png\",\n        conference: \"AFC\",\n        division: \"East\"\n    },\n    \"16\": {\n        name: \"Minnesota Vikings\",\n        color: \"#4F2683\",\n        logo: \"https://a.espncdn.com/i/teamlogos/nfl/500/min.png\",\n        conference: \"NFC\",\n        division: \"North\"\n    },\n    \"17\": {\n        name: \"New England Patriots\",\n        color: \"#002244\",\n        logo: \"https://a.espncdn.com/i/teamlogos/nfl/500/ne.png\",\n        conference: \"AFC\",\n        division: \"East\"\n    },\n    \"18\": {\n        name: \"New Orleans Saints\",\n        color: \"#D3BC8D\",\n        logo: \"https://a.espncdn.com/i/teamlogos/nfl/500/no.png\",\n        conference: \"NFC\",\n        division: \"South\"\n    },\n    \"19\": {\n        name: \"New York Giants\",\n        color: \"#0B2265\",\n        logo: \"https://a.espncdn.com/i/teamlogos/nfl/500/nyg.png\",\n        conference: \"NFC\",\n        division: \"East\"\n    },\n    \"20\": {\n        name: \"New York Jets\",\n        color: \"#125740\",\n        logo: \"https://a.espncdn.com/i/teamlogos/nfl/500/nyj.png\",\n        conference: \"AFC\",\n        division: \"East\"\n    },\n    \"21\": {\n        name: \"Philadelphia Eagles\",\n        color: \"#004C54\",\n        logo: \"https://a.espncdn.com/i/teamlogos/nfl/500/phi.png\",\n        conference: \"NFC\",\n        division: \"East\"\n    },\n    \"22\": {\n        name: \"Arizona Cardinals\",\n        color: \"#97233F\",\n        logo: \"https://a.espncdn.com/i/teamlogos/nfl/500/ari.png\",\n        conference: \"NFC\",\n        division: \"West\"\n    },\n    \"23\": {\n        name: \"Pittsburgh Steelers\",\n        color: \"#FFB612\",\n        logo: \"https://a.espncdn.com/i/teamlogos/nfl/500/pit.png\",\n        conference: \"AFC\",\n        division: \"North\"\n    },\n    \"24\": {\n        name: \"Los Angeles Chargers\",\n        color: \"#0080C6\",\n        logo: \"https://a.espncdn.com/i/teamlogos/nfl/500/lac.png\",\n        conference: \"AFC\",\n        division: \"West\"\n    },\n    \"25\": {\n        name: \"San Francisco 49ers\",\n        color: \"#AA0000\",\n        logo: \"https://a.espncdn.com/i/teamlogos/nfl/500/sf.png\",\n        conference: \"NFC\",\n        division: \"West\"\n    },\n    \"26\": {\n        name: \"Seattle Seahawks\",\n        color: \"#002244\",\n        logo: \"https://a.espncdn.com/i/teamlogos/nfl/500/sea.png\",\n        conference: \"NFC\",\n        division: \"West\"\n    },\n    \"27\": {\n        name: \"Tampa Bay Buccaneers\",\n        color: \"#D50A0A\",\n        logo: \"https://a.espncdn.com/i/teamlogos/nfl/500/tb.png\",\n        conference: \"NFC\",\n        division: \"South\"\n    },\n    \"28\": {\n        name: \"Washington Commanders\",\n        color: \"#773141\",\n        logo: \"https://a.espncdn.com/i/teamlogos/nfl/500/wsh.png\",\n        conference: \"NFC\",\n        division: \"East\"\n    },\n    \"29\": {\n        name: \"Carolina Panthers\",\n        color: \"#0085CA\",\n        logo: \"https://a.espncdn.com/i/teamlogos/nfl/500/car.png\",\n        conference: \"NFC\",\n        division: \"South\"\n    },\n    \"30\": {\n        name: \"Jacksonville Jaguars\",\n        color: \"#006778\",\n        logo: \"https://a.espncdn.com/i/teamlogos/nfl/500/jax.png\",\n        conference: \"AFC\",\n        division: \"South\"\n    },\n    \"33\": {\n        name: \"Baltimore Ravens\",\n        color: \"#241773\",\n        logo: \"https://a.espncdn.com/i/teamlogos/nfl/500/bal.png\",\n        conference: \"AFC\",\n        division: \"North\"\n    },\n    \"34\": {\n        name: \"Houston Texans\",\n        color: \"#03202F\",\n        logo: \"https://a.espncdn.com/i/teamlogos/nfl/500/hou.png\",\n        conference: \"AFC\",\n        division: \"South\"\n    }\n};\nconst NFL_TEAM_IDS = Object.keys(NFL_TEAM_DATA);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/team-data.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fnfl-rankings%2Froute&page=%2Fapi%2Fnfl-rankings%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fnfl-rankings%2Froute.ts&appDir=%2FUsers%2Fanilchitrapu%2FLibrary%2FCloudStorage%2FGoogleDrive-anilchitrapu%40gmail.com%2FMy%20Drive%2F1%20Projects%2F2024-12%20NFL%20standings%20application%2Fnfl-standings%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fanilchitrapu%2FLibrary%2FCloudStorage%2FGoogleDrive-anilchitrapu%40gmail.com%2FMy%20Drive%2F1%20Projects%2F2024-12%20NFL%20standings%20application%2Fnfl-standings&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();